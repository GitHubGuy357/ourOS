start5(): Running:    simple4
start5(): Pagers:     1
          Mappings:   7
          Pages:      7
          Frames:     6
          Children:   1
          Iterations: 10
          Priority:   5
 <- vmInitReal(): Using Disk[1], [sectSize=512 numSects=16 numTracks=32] MMU_pageSize=[4096]
start5(): after call to VmInit, status = 0

 <- p1_switch(): VM is initialized, switching from old[9] new[10]
 <- Pager(): Before Block awaiting fault...
 <- p1_switch(): VM is initialized, switching from old[10] new[8]
 <- p1_switch(): VM is initialized, switching from old[8] new[11]

Child(11): starting

Child(11): iteration 0
before.faults = 0
Child(11): reading one location from each of 7 pages

 <- FaultHandler(): Sending fault...pid=[11] offset=[0] to Pager
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- Pager(): Fault Received...from pid[11] offset[0] | reply_mboxID[860] pager_buf[0] 
 <- Pager(): Searching for frame... frame [0] found!
 <- Pager(): Locking frame [0]
 <- Pager(): Page[0] state is [UNUSED], zeroing out vmRegions frame[0]
 <- Pager(): Mapping temp pager frame=[0] access=[3] P_result = [Everything hunky-dory])
 <- Pager(): Unmapping temp pager frame[0], p_result = [Everything hunky-dory]
 <- Pager(): Setting frame[0] as clean, P_result = [Everything hunky-dory]
 <- Pager(): Fault Handled for pid[11]: page[0] frame[0] state[F_USED] sending to FaultMsg replyMbox[860]
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Before Recv on FaultTable replyMbox by pid[11]
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Before Block awaiting fault...
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Unlocking frame [0]
Child(11): page 0, value 0

 <- FaultHandler(): Sending fault...pid=[11] offset=[1] to Pager
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Fault Received...from pid[11] offset[1] | reply_mboxID[860] pager_buf[0] 
 <- Pager(): Searching for frame... frame [1] found!
 <- Pager(): Locking frame [1]
 <- Pager(): Page[1] state is [UNUSED], zeroing out vmRegions frame[1]
 <- Pager(): Mapping temp pager frame=[1] access=[3] P_result = [Everything hunky-dory])
 <- Pager(): Unmapping temp pager frame[1], p_result = [Everything hunky-dory]
 <- Pager(): Setting frame[1] as clean, P_result = [Everything hunky-dory]
 <- Pager(): Fault Handled for pid[11]: page[1] frame[1] state[F_USED] sending to FaultMsg replyMbox[860]
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Before Recv on FaultTable replyMbox by pid[11]
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Before Block awaiting fault...
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Unlocking frame [1]
Child(11): page 1, value 0

 <- FaultHandler(): Sending fault...pid=[11] offset=[2] to Pager
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Fault Received...from pid[11] offset[2] | reply_mboxID[860] pager_buf[0] 
 <- Pager(): Searching for frame... frame [2] found!
 <- Pager(): Locking frame [2]
 <- Pager(): Page[2] state is [UNUSED], zeroing out vmRegions frame[2]
 <- Pager(): Mapping temp pager frame=[2] access=[3] P_result = [Everything hunky-dory])
 <- Pager(): Unmapping temp pager frame[2], p_result = [Everything hunky-dory]
 <- Pager(): Setting frame[2] as clean, P_result = [Everything hunky-dory]
 <- Pager(): Fault Handled for pid[11]: page[2] frame[2] state[F_USED] sending to FaultMsg replyMbox[860]
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Before Recv on FaultTable replyMbox by pid[11]
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Before Block awaiting fault...
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Unlocking frame [2]
Child(11): page 2, value 0

 <- FaultHandler(): Sending fault...pid=[11] offset=[3] to Pager
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Fault Received...from pid[11] offset[3] | reply_mboxID[860] pager_buf[0] 
 <- Pager(): Searching for frame... frame [3] found!
 <- Pager(): Locking frame [3]
 <- Pager(): Page[3] state is [UNUSED], zeroing out vmRegions frame[3]
 <- Pager(): Mapping temp pager frame=[3] access=[3] P_result = [Everything hunky-dory])
 <- Pager(): Unmapping temp pager frame[3], p_result = [Everything hunky-dory]
 <- Pager(): Setting frame[3] as clean, P_result = [Everything hunky-dory]
 <- Pager(): Fault Handled for pid[11]: page[3] frame[3] state[F_USED] sending to FaultMsg replyMbox[860]
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[3] status[INMEM] to frame[3] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Before Recv on FaultTable replyMbox by pid[11]
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[3] from frame[3] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Before Block awaiting fault...
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[3] status[INMEM] to frame[3] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Unlocking frame [3]
Child(11): page 3, value 0

 <- FaultHandler(): Sending fault...pid=[11] offset=[4] to Pager
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[3] from frame[3] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Fault Received...from pid[11] offset[4] | reply_mboxID[860] pager_buf[0] 
 <- Pager(): Searching for frame... frame [4] found!
 <- Pager(): Locking frame [4]
 <- Pager(): Page[4] state is [UNUSED], zeroing out vmRegions frame[4]
 <- Pager(): Mapping temp pager frame=[4] access=[3] P_result = [Everything hunky-dory])
 <- Pager(): Unmapping temp pager frame[4], p_result = [Everything hunky-dory]
 <- Pager(): Setting frame[4] as clean, P_result = [Everything hunky-dory]
 <- Pager(): Fault Handled for pid[11]: page[4] frame[4] state[F_USED] sending to FaultMsg replyMbox[860]
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[3] status[INMEM] to frame[3] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[4] status[INMEM] to frame[4] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Before Recv on FaultTable replyMbox by pid[11]
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[3] from frame[3] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[4] from frame[4] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Before Block awaiting fault...
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[3] status[INMEM] to frame[3] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[4] status[INMEM] to frame[4] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Unlocking frame [4]
Child(11): page 4, value 0

 <- FaultHandler(): Sending fault...pid=[11] offset=[5] to Pager
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[3] from frame[3] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[4] from frame[4] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Fault Received...from pid[11] offset[5] | reply_mboxID[860] pager_buf[0] 
 <- Pager(): Searching for frame... frame [5] found!
 <- Pager(): Locking frame [5]
 <- Pager(): Page[5] state is [UNUSED], zeroing out vmRegions frame[5]
 <- Pager(): Mapping temp pager frame=[5] access=[3] P_result = [Everything hunky-dory])
 <- Pager(): Unmapping temp pager frame[5], p_result = [Everything hunky-dory]
 <- Pager(): Setting frame[5] as clean, P_result = [Everything hunky-dory]
 <- Pager(): Fault Handled for pid[11]: page[5] frame[5] state[F_USED] sending to FaultMsg replyMbox[860]
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[3] status[INMEM] to frame[3] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[4] status[INMEM] to frame[4] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[5] status[INMEM] to frame[5] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Before Recv on FaultTable replyMbox by pid[11]
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[3] from frame[3] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[4] from frame[4] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[5] from frame[5] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Before Block awaiting fault...
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[3] status[INMEM] to frame[3] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[4] status[INMEM] to frame[4] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[5] status[INMEM] to frame[5] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Unlocking frame [5]
Child(11): page 5, value 0

 <- FaultHandler(): Sending fault...pid=[11] offset=[6] to Pager
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[3] from frame[3] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[4] from frame[4] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[5] from frame[5] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Fault Received...from pid[11] offset[6] | reply_mboxID[860] pager_buf[0] 
 <- Pager(): Searching for frame... frame not found...
 <- Pager(): Setting frame[0] as unreferenced...
 <- Pager(): Setting frame[1] as unreferenced...
 <- Pager(): Setting frame[2] as unreferenced...
 <- Pager(): Setting frame[3] as unreferenced...
 <- Pager(): Setting frame[4] as unreferenced...
 <- Pager(): Setting frame[5] as unreferenced...
 <- Pager(): frame[0] found state=[F_USED], stealing from pid[11] page[0] 
 <- Pager(): page[0] is NOT dirty...
 <- Pager(): Locking frame [0]
 <- Pager(): Page[6] state is [UNUSED], zeroing out vmRegions frame[0]
 <- Pager(): Mapping temp pager frame=[0] access=[3] P_result = [Everything hunky-dory])
 <- Pager(): Unmapping temp pager frame[0], p_result = [Everything hunky-dory]
 <- Pager(): Setting frame[0] as clean, P_result = [Everything hunky-dory]
 <- Pager(): Fault Handled for pid[11]: page[6] frame[0] state[F_USED] sending to FaultMsg replyMbox[860]
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[3] status[INMEM] to frame[3] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[4] status[INMEM] to frame[4] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[5] status[INMEM] to frame[5] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[6] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Before Recv on FaultTable replyMbox by pid[11]
 <- p1_switch(): VM is initialized, switching from old[11] new[10]
 <- p1_switch(): Unmapping page=[0] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[1] from frame[1] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[2] from frame[2] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[3] from frame[3] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[4] from frame[4] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[5] from frame[5] by old pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Unmapping page=[6] from frame[0] by old pid[11]... S_result = [Everything hunky-dory]
 <- Pager(): Before Block awaiting fault...
 <- p1_switch(): VM is initialized, switching from old[10] new[11]
 <- p1_switch(): Mapping page=[0] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[1] status[INMEM] to frame[1] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[2] status[INMEM] to frame[2] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[3] status[INMEM] to frame[3] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[4] status[INMEM] to frame[4] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[5] status[INMEM] to frame[5] by new pid[11]... S_result = [Everything hunky-dory]
 <- p1_switch(): Mapping page=[6] status[INMEM] to frame[0] by new pid[11]... S_result = [Everything hunky-dory]
 <- FaultHandler(): Unlocking frame [0]
Child(11): page 6, value 0
Child(11): vmStats.faults = 7

Child(11): iteration 1
before.faults = 7
Child(11): reading one location from each of 7 pages
Child(11): page 0, value 0
Child(11): page 1, value 0
Child(11): page 2, value 0
Child(11): page 3, value 0
Child(11): page 4, value 0
Child(11): page 5, value 0
Child(11): page 6, value 0
Child(11): vmStats.faults = 7
